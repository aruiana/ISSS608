[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Submission Links",
    "section": "",
    "text": "Tableau Profile: Ariana Tan\nGithub: Aruiana"
  },
  {
    "objectID": "Hands-on_EX01/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_EX01/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_EX02/Hands-on_EX02.html",
    "href": "Hands-on_EX02/Hands-on_EX02.html",
    "title": "InClass Ex 3",
    "section": "",
    "text": "Getting Started\nInstall and launch R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse and ggiraph packages are installed in the computer.\n\npacman::p_load(ggiraph, tidyverse)\n\nImporting the data\n\n\n\nPlotting a simple bar chart\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608",
    "section": "",
    "text": "Welcome to my homepage. Let’s aim for A++"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_01/takehome_Ex_01.html",
    "href": "Takehome_Ex/Takehome_Ex_01/takehome_Ex_01.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "Creating data visualisation beyond default\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo.\nStep\nAction\n\n\n\n\n1\nLoad excel file\nClick to a file > choose excel file > Open.\n\n\n\n2\nBin age group in 10s. Select down arrow > Create Group\n\n\n\n3\nLabel bins and add selection to group\n\n\n\n4\nSeparate the male and female population. Right click “Population” > Create > Calculated Field\n\n\n\n5\nCreate a field “Male”.\nCode: If [Sex] = “Males” THEN [Pop] END\nCount the Males in the Population\n\n\n\n6\nCreate a field “Females”.\nCode: If [Sex] = “Males” THEN [Pop] END\nCount the Females in the Population\n\n\n\n7\nPopulate the Male and Female population in Columns by Age Group.\nTo create a pyramid, right click on Male>Edit Axis\n\n\n\n8\na. Range > Fixed > End 24,000\nTo ensure Male and Female axis is synced.\nb. Scale > Select Reversed\n\n\n\n9\nShow Top 9 Planning area.\nSelect down arrow key > Filter > Top > Top 9 > Pop Sum\n\n\n\n10\nChange colour of Female population.\nUnder SUM(Female) > Colour > Select Colour\n\n\n\n11\nInsert Avg Line per Planning Area\n\n\n\n12\nPublish on Tableau Public.\nSever > Tableau Public > Save to Tableau Public\n\n\n\n\n\n\n\n\n\nThis table allows for the user to easily compare each panel against the total average line (grey line). User can see clearly which areas are above average and below average.\n\n\n\n\n\nIt can be observed that even though the population chosen are the biggest 9 areas, the 9 areas are split into 4 above average, 2 on the line and 3 below average. There is a hug difference between the top and bottom of more than 5,000.\n\n\n\nWe observed that for the overall average, there are more females than males. This is also persistent in most planning areas with the exception of Jurong West and Woodlands. This can also be observed where in Sengkang and Jurong West, the female average is almost identical, JW had a larger male average, with a higher population for males aged 20-29.\nThis maybe because of the labour intensive job opportunities in that area which causes an increased demand for young males to move to that area.\n\n\n\nWe observed that in the following planning areas, there is a sharp dip in the population aged 40 - 49. The population for 50 then increases before it dips down again at 60.\n\nBukit Batok\nChua Chu Kang\nHougang\nTampines\nYishun\nWoodlands (Males only)\n\n\n\n\nFor all top 9 planning areas, there are more females than males aged 89 and above. This is inline with research (https://www.prb.org/resources/around-the-globe-women-outlive-men/) that women have a longer life expectancy than men.\n\n\n\nThe planning areas Hougang and Yishun has the average population closest to the average line and thus would be an optimal area to do a population survey using these areas as statistical representation.\n\n\n\nInterestingly, even though Punggol has the 2nd population, there is a large population of females 30 - 39 in that area. This is also interesting to note that for this particular area, the shape of the pyramid is asymmetrical. More research needs to be done to understand the reason.\n\n\n\nWith the exception of SengKang and Punggol, all other areas have a smaller base, indicating an aging population. This is consistent with Singapore projection. As SengKang and Punggol is a relatively new area, for BTOs of new couples, there are more babies born there."
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html",
    "href": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html",
    "title": "Take Home Ex 2",
    "section": "",
    "text": "SINGAPORE POPULATION DISTRIBUTION BY AGE by THOMAS HOANG"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#critic",
    "href": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#critic",
    "title": "Take Home Ex 2",
    "section": "Critic",
    "text": "Critic\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nCritic\nDescription\n\n\n\n\nClarity\ny-axis is by ascending order\nIn a standard pyramid, the y-axis should be by descending order, with 90&above at the top.\n\n\n\nx-axis is inconsistent:\n- between male & female in 1 planning area\n-across all planning areas\n\nx-axis should be consistent between male and female to show a comparative/symmetrical view of the pyramid (not be misleading)\nx-axis should be consistent across all planning areas for ease of comparision\n\n\n\n\ninsufficient spacing for x-axis labels\nUser should be able to see the x-axis label clearly\n\n\n\nno callouts or lead-in to provide context\nNo additional information is given to provide context\n\n\nAesthetics\nOutline is distracting\nThe outline for each bar is distracting as there are many bars and the outline does not give any clarity\n\n\n\nNo gridelines\nMissing grid lines for the x axis for ease of comparison\n\n\n\nDistracting/ unclear colours\nThe yellow and purple colours are glaring for the eyes and is not normally associated with Male/Female (blue/pink)"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#sketch",
    "href": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#sketch",
    "title": "Take Home Ex 2",
    "section": "Sketch",
    "text": "Sketch"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#remake",
    "href": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#remake",
    "title": "Take Home Ex 2",
    "section": "Remake",
    "text": "Remake\n\npacman::p_load(tidyverse, patchwork, ggthemes, reshape2, dplyr) \n\n#| echo: false\n  Popdata <- read_csv(\"data/respopagesextod2022.csv\", col_names = TRUE, show_col_types = FALSE)\nPopdata\n\n# A tibble: 100,928 × 7\n   PA         SZ                     AG     Sex     TOD                Pop  Time\n   <chr>      <chr>                  <chr>  <chr>   <chr>            <dbl> <dbl>\n 1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 1- and 2-Ro…     0  2022\n 2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 3-Room Flats    10  2022\n 3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 4-Room Flats    10  2022\n 4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 5-Room and …    30  2022\n 5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HUDC Flats (exc…     0  2022\n 6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Condominiums an…    50  2022\n 7 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Landed Properti…     0  2022\n 8 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Others               0  2022\n 9 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 1- and 2-Ro…     0  2022\n10 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 3-Room Flats     0  2022\n# … with 100,918 more rows\n\n\n\nPA_pop_tab <- Popdata %>%\n  group_by(PA) %>%\n  summarise(PA_pop = sum(Pop)) %>%\n  top_n(n=9, wt=PA_pop) %>%\n  arrange(desc(PA_pop))\n\nPopdataT9 <- Popdata %>%\n filter(PA %in% PA_pop_tab$PA)\n\n\n Popdata_males <- Popdata %>%\n  filter(`Sex` ==  \"Males\") %>%\n  mutate (Pop = -Pop)\n \n Popdata_females <-Popdata %>%\n  filter(`Sex` ==  \"Females\") \nPopdata_T <- rbind(Popdata_males,Popdata_females)\n\nPopdata_T\n\n# A tibble: 100,928 × 7\n   PA         SZ                     AG     Sex   TOD                  Pop  Time\n   <chr>      <chr>                  <chr>  <chr> <chr>              <dbl> <dbl>\n 1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room…     0  2022\n 2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats     -10  2022\n 3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats     -10  2022\n 4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Ex…   -30  2022\n 5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclu…     0  2022\n 6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and …   -50  2022\n 7 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Landed Properties      0  2022\n 8 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Others                 0  2022\n 9 Ang Mo Kio Ang Mo Kio Town Centre 5_to_9 Males HDB 1- and 2-Room…     0  2022\n10 Ang Mo Kio Ang Mo Kio Town Centre 5_to_9 Males HDB 3-Room Flats     -10  2022\n# … with 100,918 more rows\n\n\n\noptions(scipen = 999)\np1 <- ggplot(data = PopdataT9 , aes (y = PA, x = Pop, fill = Sex)) +\n      geom_bar(stat = \"identity\") + scale_fill_manual(\"legend\", values = c(\"Females\" = \"indianred1\", \"Males\" = \"royalblue3\")) + scale_x_continuous(labels = scales::comma, limits = c(0,250000) ) + ggtitle(\"Total Population Size of Top 9 Planning Areas\")\n\np1\n\nWarning: Removed 893 rows containing missing values (`geom_bar()`).\n\n\n\n\n\n\nPopdata_T9 <- Popdata_T %>%\n filter(PA %in% PA_pop_tab$PA)\n\n\nxbrks <- seq(-15000,15000,5000)\nxlabls <- paste0(as.character(c(seq(15, 0, -5),seq(5,15,5))),\"k\")\nPopdata_T$AG <- factor (Popdata_T$AG, levels = unique(Popdata_T$AG))\n\np2 <- ggplot(Popdata_T9, aes (x = AG, y = Pop, fill = Sex)) +\n      geom_bar(stat = \"identity\") + \n      scale_y_continuous(limits = c(-15000,15000), breaks = xbrks, \n                         labels = xlabls, name = \"Population Size\")+  \n  xlab(\"Age Groups\") + coord_flip() + theme_bw() + facet_wrap(vars(PA)) +\n  scale_fill_manual(\"legend\", values = c(\"Females\" = \"indianred1\", \"Males\" = \"royalblue3\")) + ggtitle(\"Population Pyramid of Top 9 Planning Areas\")\n\np2\n\n\n\n\n\np3 <- p1 + p2 + plot_layout(heights = c(1, 2))\n\np3\n\nWarning: Removed 893 rows containing missing values (`geom_bar()`)."
  },
  {
    "objectID": "In-Class_Ex03/In_Class03.html",
    "href": "In-Class_Ex03/In_Class03.html",
    "title": "InClass Ex 3",
    "section": "",
    "text": "Getting Started\nInstall and launch R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse and ggiraph packages are installed in the computer.\n\npacman::p_load(ggiraph, tidyverse)\n\nImporting the data\n\n\n\nPlotting a simple bar chart\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-Class_Ex04/In_Class04.html",
    "href": "In-Class_Ex04/In_Class04.html",
    "title": "In-Class Ex 4",
    "section": "",
    "text": "pacman::p_load(plotly, DT, patchwork, ggstatsplot, tidyverse)\n\n\nexam_data <- read_csv((\"data/Exam_data.csv\"))\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE) #<<\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p) #<<\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER,\n  y = MATHS,\n  type = \"p\",\n  messages = FALSE\n)\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\npacman::p_load(readxl, easystats)\n\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_c <- check_collinearity(model)\n\ncheck_c\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]\n\n\n\nplot(check_c)\n\n\n\n\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)\n\n\n\n\n\ncheck_model(model1)\n\n\n\n\n\nmy_sum <- exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html",
    "title": "Take Home Ex 3",
    "section": "",
    "text": "To uncover the salient patterns of the resale prices of public housing property by residential towns and estates in Singapore by using appropriate analytical visualisation techniques l\nFor the purpose of this study, the focus in on 3-ROOM, 4-ROOM and 5-ROOM types in 2022."
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_04.html",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_04.html",
    "title": "Take Home Ex 3",
    "section": "",
    "text": "pacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate, ggstatsplot, heatmaply)\n\nHDB <- read_csv((\"data/HDB.csv\"))\n\n#Create addtional data on price per sqm\nHDB$price_per_sqm <- (HDB$resale_price / HDB$floor_area_sqm)\n\n\n#Filter 3Room, 4Room, 5Room\nHDBRoom <- HDB %>% filter(flat_type==\"3 ROOM\" | flat_type==\"4 ROOM\" | flat_type==\"5 ROOM\") %>%\n  separate(month, into = c(\"year\", \"month\")) %>% \n  filter(year == \"2022\") %>%\n  separate(remaining_lease, into = c(\"rmlease_years\", \"rmlease_month\"), sep = \"years\") \n\nHDBRoom$region <- case_when(\n  HDBRoom$town %in% c(\"ANG MO KIO\", \"HOUGANG\", \"PUNGGOL\", \"SERANGOON\", \"SENGKANG\") ~ \"North-East\",\n    HDBRoom$town %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"GEYLANG\", \"KALLANG/WHAMPOA\", \"MARINE PARADE\", \"QUEENSTOWN\", \"TOA PAYOH\") ~ \"Central\",\n    HDBRoom$town %in% c(\"BEDOK\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n    HDBRoom$town %in% c(\"SEMBAWANG\", \"WOODLANDS\", \"YISHUN\") ~ \"North\",\n    HDBRoom$town %in% c(\"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\", \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\") ~ \"West\")\n\nHDBRoom$rmlease_years <- as.numeric(HDBRoom$rmlease_years)\n\nHDBRoom$rmlease_month <- gsub(\"[monthsmonth]\", \" \", HDBRoom$rmlease_month) %>%\n  as.numeric(HDBRoom$rmlease_month) / 12 \n\nHDBRoom\n\n# A tibble: 24,374 × 15\n   year  month town       flat_t…¹ block stree…² store…³ floor…⁴ flat_…⁵ lease…⁶\n   <chr> <chr> <chr>      <chr>    <chr> <chr>   <chr>     <dbl> <chr>     <dbl>\n 1 2022  01    ANG MO KIO 3 ROOM   320   ANG MO… 07 TO …      73 New Ge…    1977\n 2 2022  01    ANG MO KIO 3 ROOM   225   ANG MO… 07 TO …      67 New Ge…    1978\n 3 2022  01    ANG MO KIO 3 ROOM   331   ANG MO… 07 TO …      68 New Ge…    1981\n 4 2022  01    ANG MO KIO 3 ROOM   534   ANG MO… 07 TO …      82 New Ge…    1980\n 5 2022  01    ANG MO KIO 3 ROOM   578   ANG MO… 04 TO …      67 New Ge…    1980\n 6 2022  01    ANG MO KIO 3 ROOM   452   ANG MO… 01 TO …      83 New Ge…    1979\n 7 2022  01    ANG MO KIO 3 ROOM   560   ANG MO… 01 TO …      67 New Ge…    1980\n 8 2022  01    ANG MO KIO 3 ROOM   435   ANG MO… 04 TO …      67 New Ge…    1979\n 9 2022  01    ANG MO KIO 3 ROOM   435   ANG MO… 04 TO …      67 New Ge…    1979\n10 2022  01    ANG MO KIO 3 ROOM   560   ANG MO… 10 TO …      67 New Ge…    1980\n# … with 24,364 more rows, 5 more variables: rmlease_years <dbl>,\n#   rmlease_month <dbl>, resale_price <dbl>, price_per_sqm <dbl>, region <chr>,\n#   and abbreviated variable names ¹​flat_type, ²​street_name, ³​storey_range,\n#   ⁴​floor_area_sqm, ⁵​flat_model, ⁶​lease_commence_date\n\n\n\nHDBRoom$storey_range <- factor (HDBRoom$storey_range, levels = unique(HDBRoom$storey_range))\nggplot(data = HDBRoom,\n  aes(x =storey_range)) + geom_bar()\n\n\n\n\n\nunique(HDBRoom$storey_range)\n\n [1] 07 TO 09 04 TO 06 01 TO 03 10 TO 12 13 TO 15 25 TO 27 16 TO 18 19 TO 21\n [9] 22 TO 24 28 TO 30 34 TO 36 31 TO 33 37 TO 39 40 TO 42 43 TO 45 49 TO 51\n[17] 46 TO 48\n17 Levels: 07 TO 09 04 TO 06 01 TO 03 10 TO 12 13 TO 15 25 TO 27 ... 46 TO 48\n\nunique(HDBRoom$town)\n\n [1] \"ANG MO KIO\"      \"BEDOK\"           \"BISHAN\"          \"BUKIT BATOK\"    \n [5] \"BUKIT MERAH\"     \"BUKIT PANJANG\"   \"BUKIT TIMAH\"     \"CENTRAL AREA\"   \n [9] \"CHOA CHU KANG\"   \"CLEMENTI\"        \"GEYLANG\"         \"HOUGANG\"        \n[13] \"JURONG EAST\"     \"JURONG WEST\"     \"KALLANG/WHAMPOA\" \"MARINE PARADE\"  \n[17] \"PASIR RIS\"       \"PUNGGOL\"         \"QUEENSTOWN\"      \"SEMBAWANG\"      \n[21] \"SENGKANG\"        \"SERANGOON\"       \"TAMPINES\"        \"TOA PAYOH\"      \n[25] \"WOODLANDS\"       \"YISHUN\"         \n\n\n\nHDBRoom$rmlease_month[is.na(HDBRoom$rmlease_month)] = 0\n\nHDBRoom$rmlease <- as.numeric(HDBRoom$rmlease_years + HDBRoom$rmlease_month)\n\nHDBRoom$storey_range <- str_replace(HDBRoom$storey_range, \"TO\", \"-\")\n\nsr_sort = c(\"01 - 03\", \"04 - 06\", \"07 - 09\", \"10 - 12\", \"13 - 15\", \"16 - 18\", \"19 - 21\", \"22 - 24\",\"25 - 27\",\"28 - 30\", \"31 - 33\", \"34 - 36\", \"37 - 39\", \"40 - 42\", \"43 - 45\", \"49 - 51\", \"46 - 48\")\n\nHDBRoom$storey_range <- factor (HDBRoom$storey_range, levels = sr_sort)\n\n\nHDBDATA <- HDBRoom [,!names(HDBRoom) %in% c(\"year\", \"block\", \"street_name\", \"rmlease_years\", \"rmlease_month\", \"flat_model\")]\n\n\ngghistostats(\n  data = HDBDATA, x = \"floor_area_sqm\",\n  type = \"bayes\",\n  test.value = 100,\n  xlab = \"Floor Area (sqm) of property sold\"\n  )\n\n\n\n\n\nggbetweenstats(\n  data = HDBDATA,\n  x = flat_type, \n  y = resale_price,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\nggscatterstats(\n  data = HDBDATA,\n  x = resale_price,\n  y = price_per_sqm,\n  marginal = FALSE,\n  )\n\n\n\n\n\noptions(scipen = 999)\nmean(HDBDATA$resale_price)\n\n[1] 536391.2\n\nmin(HDBDATA$resale_price)\n\n[1] 200000\n\nmax(HDBDATA$resale_price)\n\n[1] 1418000\n\nmean(HDBDATA$price_per_sqm)\n\n[1] 5735.973\n\nmin(HDBDATA$price_per_sqm)\n\n[1] 3333.333\n\nmax(HDBDATA$price_per_sqm)\n\n[1] 14731.18\n\n\n\nscdata <- highlight_key(HDBDATA) \n  \nsc1 <- ggplot(data = scdata, aes(x = town, y = resale_price, fill = region)) + geom_point() + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + scale_y_continuous(breaks = c(200000,500000,1000000,150000)) +\n  labs(title = \"Resale Price by Town\", x = \"Town\", y = \"Resale Price\")\n\nsc2 <- ggplot(data = scdata, aes(x = town, y = price_per_sqm, fill = region)) + geom_point() + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + scale_y_continuous(breaks = c(3000,6000,9000,12000,15000)) +\n    labs(title = \"Resale Price per sqm by Town\", x = \"Town\", y = \"Resale Price/Sqm\")\n\nsubplot(ggplotly(sc1), ggplotly(sc2))\n\n\n\n\n\n\nHDBDATA %>%\n  mutate(class = fct_reorder(town, price_per_sqm, .fun=\"mean\")) %>%\n  ggplot(aes(y =reorder(town, price_per_sqm),\n           x = price_per_sqm, fill = region)) + \n  geom_boxplot() + stat_summary(fun.y=mean, geom = \"point\", colour=\"yellow\")\n\n\n\n\n\nHDBDATA %>% \n  group_by(region) %>%\n  mutate(class = fct_reorder(region, price_per_sqm, .fun=\"mean\")) %>%\n  ggplot(mapping = aes(y = flat_type, x = price_per_sqm)) +\n  # Make grouped boxplot\n  geom_boxplot(aes(fill = as.factor(region))) +\n  theme(legend.position = \"top\") +\n  # Adjust lables and add title\n  labs(title = \"HDB resale prices in 2022 by region\", y=\"Flat Type\", x = \"Price per square metre (SGD)\", fill = \"flat_type\")\n\n\n\n\n\nHDBDATA %>%\n  \ngrouped_gghistostats(\n  x                 = resale_price,\n  test.value        = 50,\n  type              = \"nonparametric\",\n  grouping.var      = region,\n  normal.curve      = TRUE,\n  normal.curve.args = list(color = \"red\", size = 1),\n  ggtheme           = ggthemes::theme_tufte(),\n  ## modify the defaults from `{ggstatsplot}` for each plot\n  plotgrid.args     = list(nrow = 2),\n  annotation.args   = list(title = \"Resale price by region\")\n)\n\n\n\n\n\nfloorheatmap <-\n  HDBDATA %>%\n  group_by(town, storey_range) %>%\n  summarise(median_price = median(price_per_sqm))\n\nheatmap <- ggplot(data = floorheatmap, \n                  mapping = aes(x = town, y = storey_range, fill = median_price)) +\n            geom_tile() +\n  labs(title = \"Heatmap of HDB breakdown by area and storey\", x = \"Town\", y = \"Storey\") +\n  scale_fill_gradient(name = \"Median Resale Price/sqm\",\n                      low = \"peachpuff\",\n                      high = \"deeppink4\")+\ntheme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\nheatmap"
  },
  {
    "objectID": "In-Class_Ex05/In_Class05b.html",
    "href": "In-Class_Ex05/In_Class05b.html",
    "title": "In-Class Ex 5a",
    "section": "",
    "text": "pacman::p_load(ggtern, plotly, tidyverse, heatmaply)\n\n\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\nheatmaply(agpop_mutated)"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#histogram-of-dataset",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#histogram-of-dataset",
    "title": "Take Home Ex 3",
    "section": "Histogram of dataset",
    "text": "Histogram of dataset\nFrom the following histograms, we have the following findings: 1. The largest number of resale have 94 years left in the lease. This is almost immediately after the HDB MOP of 5 years for a 99year lease. This group should be the newest HDB flats. The next “peak” is at 60 years and this\n\n\nShow\noptions(scipen = 999)\n\np1 <- gghistostats(\n  data = HDBDATA, x = \"rmlease\",\n  type = \"bayes\",\n  test.value = 100,\n  xlab = \"Resale Property remaining lease\"\n  )\n\np2 <- gghistostats(\n  data = HDBDATA, x = \"month\",\n  type = \"bayes\",\n  test.value = 100,\n  xlab = \"Month of Purchase\"\n  )\n\np3 <- gghistostats(\n  data = HDBDATA, x = \"resale_price\",\n  type = \"bayes\",\n  test.value = 100,\n  xlab = \"Resale Price\"\n  )\n\np4 <- gghistostats(\n  data = HDBDATA, x = \"price_per_sqm\",\n  type = \"bayes\",\n  test.value = 100,\n  xlab = \"Resale Price/sqm\"\n  )\n\np5 <- ggplot(\n  data = HDBDATA, aes(x = town, y=rmlease, colour = flat_type)) + geom_point() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + \n    labs( x = \"Resale by Town\")\n\np6 <- ggplot(\n  data = HDBDATA, aes(x = storey_range, fill = flat_type)) + geom_bar() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + \n    labs( x = \"Resale by Storey\")\n\n(p1 + p2) / (p3 + p4)\n\n\n\n\n\nShow\np5\n\n\n\n\n\nShow\np6\n\n\n\n\n\n\n\nShow\nggbetweenstats(\n  data = HDBDATA,\n  x = flat_type, \n  y = price_per_sqm,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nShow\nggscatterstats(\n  data = HDBDATA,\n  x = resale_price,\n  y = price_per_sqm,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\nShow\nscdata <- highlight_key(HDBDATA) \n  \nsc1 <- ggplot(data = scdata, aes(x = town, y = resale_price, colour = region)) + geom_point() + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + scale_y_continuous(breaks = c(200000,500000,1000000,150000)) +\n  labs(title = \"Resale Price by Town\", x = \"Town\", y = \"Resale Price\")\n\nsc2 <- ggplot(data = scdata, aes(x = town, y = price_per_sqm, colour = region)) + geom_point() + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + scale_y_continuous(breaks = c(3000,6000,9000,12000,15000)) +\n    labs(title = \"Resale Price per sqm by Town\", x = \"Town\", y = \"Resale Price/Sqm\")\n\nsubplot(ggplotly(sc1), ggplotly(sc2))\n\n\n\n\n\n\n\n\nShow\nHDBDATA %>%\n  mutate(class = fct_reorder(town, price_per_sqm, .fun=\"mean\")) %>%\n  ggplot(aes(y =reorder(town, price_per_sqm),\n           x = price_per_sqm, fill = region)) + \n  geom_boxplot() + stat_summary(fun.y=mean, geom = \"point\", colour=\"yellow\")\n\n\n\n\n\n\n\nShow\nHDBDATA %>% \n  group_by(region) %>%\n  mutate(class = fct_reorder(region, price_per_sqm, .fun=\"mean\")) %>%\n  ggplot(mapping = aes(y = flat_type, x = price_per_sqm)) +\n  # Make grouped boxplot\n  geom_boxplot(aes(fill = as.factor(region))) +\n  theme(legend.position = \"top\") +\n  # Adjust lables and add title\n  labs(title = \"HDB resale prices in 2022 by region\", y=\"Flat Type\", x = \"Price per square metre (SGD)\", fill = \"flat_type\")\n\n\n\n\n\n\n\nShow\nHDBDATA %>%\n  \ngrouped_gghistostats(\n  x                 = resale_price,\n  test.value        = 50,\n  type              = \"nonparametric\",\n  grouping.var      = region,\n  normal.curve      = TRUE,\n  normal.curve.args = list(color = \"red\", size = 1),\n  ggtheme           = ggthemes::theme_tufte(),\n  ## modify the defaults from `{ggstatsplot}` for each plot\n  plotgrid.args     = list(nrow = 2),\n  annotation.args   = list(title = \"Resale price by region\")\n)\n\n\n\n\n\n\n\nShow\nfloorheatmap <-\n  HDBDATA %>%\n  group_by(town, storey_range) %>%\n  summarise(median_price = median(price_per_sqm))\n\nheatmap <- ggplot(data = floorheatmap, \n                  mapping = aes(x = town, y = storey_range, fill = median_price)) +\n            geom_tile() +\n  labs(title = \"Heatmap of HDB breakdown by area and storey\", x = \"Town\", y = \"Storey\") +\n  scale_fill_gradient(name = \"Median Resale Price/sqm\",\n                      low = \"peachpuff\",\n                      high = \"deeppink4\")+\ntheme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\nheatmap\n\n\n\n\n\n\n\nShow\na <-\nggplot(HDBDATA, aes(x = rmlease, y = resale_price, \n                      size = floor_area_sqm, \n                      colour = region)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_size(range = c(2, 12)) +\n  labs(title = '2022: {as.integer(frame_time)} Month', \n       x = 'Remaining Lease', \n       y = 'Resale Price') +\n  transition_time(month) +       #<<\n  ease_aes('linear')            #<<\n\na"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-1-load-packages",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-1-load-packages",
    "title": "Take Home Ex 3",
    "section": "Step 1: Load Packages",
    "text": "Step 1: Load Packages\n\n\nShow\npacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate, ggstatsplot, heatmaply)"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-2-import-data",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-2-import-data",
    "title": "Take Home Ex 3",
    "section": "Step 2: Import Data",
    "text": "Step 2: Import Data\n\n\nShow\n#import data\nHDB <- read_csv((\"data/HDB.csv\"))\n\n\nRows: 146338 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): month, town, flat_type, block, street_name, storey_range, flat_mode...\ndbl (3): floor_area_sqm, lease_commence_date, resale_price\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step3-filter-data-for-the-study",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step3-filter-data-for-the-study",
    "title": "Take Home Ex 3",
    "section": "Step3: Filter Data for the study",
    "text": "Step3: Filter Data for the study\nFilter out the data required:\n1. Room Type\n2. Year 2022\n\n\nShow\n#Filter 3Room, 4Room, 5Room, Filter 2022, Convert remaining lease into years\nHDBRoom <- HDB %>% filter(flat_type==\"3 ROOM\" | flat_type==\"4 ROOM\" | flat_type==\"5 ROOM\") %>%\n  separate(month, into = c(\"year\", \"month\")) %>% \n  filter(year == \"2022\") %>%\n  separate(remaining_lease, into = c(\"rmlease_years\", \"rmlease_month\"), sep = \"years\")"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-4-amend-data-set",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-4-amend-data-set",
    "title": "Take Home Ex 3",
    "section": "Step 4: Amend Data Set",
    "text": "Step 4: Amend Data Set\n1. Convert the Month from Character to Number\n2. Convert Remaining lease from Character to Number\n3. Re-categorise towns into regions\n4. Sort Storey Range by smallest to largest\n5. Create new dataset for price/sqm\n\n\nShow\n#Convert Month from Chr to number\nHDBRoom$month <- as.numeric(HDBRoom$month)\n\n#Convert Remaining lease into numeric years in decimal\nHDBRoom$rmlease_years <- as.numeric(HDBRoom$rmlease_years)\n\nHDBRoom$rmlease_month <- gsub(\"[monthsmonth]\", \" \", HDBRoom$rmlease_month) %>%\n  as.numeric(HDBRoom$rmlease_month) / 12 \n\nHDBRoom$rmlease_month[is.na(HDBRoom$rmlease_month)] = 0\n\nHDBRoom$rmlease <- as.numeric(HDBRoom$rmlease_years + HDBRoom$rmlease_month)\n\n#Group Towns into Regions\nHDBRoom$region <- case_when(\n  HDBRoom$town %in% c(\"ANG MO KIO\", \"HOUGANG\", \"PUNGGOL\", \"SERANGOON\", \"SENGKANG\") ~ \"North-East\",\n    HDBRoom$town %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"GEYLANG\", \"KALLANG/WHAMPOA\", \"MARINE PARADE\", \"QUEENSTOWN\", \"TOA PAYOH\") ~ \"Central\",\n    HDBRoom$town %in% c(\"BEDOK\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n    HDBRoom$town %in% c(\"SEMBAWANG\", \"WOODLANDS\", \"YISHUN\") ~ \"North\",\n    HDBRoom$town %in% c(\"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\", \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\") ~ \"West\")\n\n#Edit storey range and sort by smallest\nHDBRoom$storey_range <- str_replace(HDBRoom$storey_range, \"TO\", \"-\")\n\nsr_sort = c(\"01 - 03\", \"04 - 06\", \"07 - 09\", \"10 - 12\", \"13 - 15\", \"16 - 18\", \"19 - 21\", \"22 - 24\",\"25 - 27\",\"28 - 30\", \"31 - 33\", \"34 - 36\", \"37 - 39\", \"40 - 42\", \"43 - 45\", \"49 - 51\", \"46 - 48\")\n\nHDBRoom$storey_range <- factor (HDBRoom$storey_range, levels = sr_sort)\n\n#Create additional data on price per sqm\nHDBRoom$price_per_sqm <- (HDBRoom$resale_price / HDBRoom$floor_area_sqm)"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-5-select-the-relevant-columns-for-analysis",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-5-select-the-relevant-columns-for-analysis",
    "title": "Take Home Ex 3",
    "section": "Step 5: Select the relevant columns for analysis",
    "text": "Step 5: Select the relevant columns for analysis\n\n\nShow\nHDBDATA <- HDBRoom [,!names(HDBRoom) %in% c(\"year\", \"block\", \"street_name\", \"rmlease_years\", \"rmlease_month\", \"flat_model\")]"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#data-analytics",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#data-analytics",
    "title": "Take Home Ex 3",
    "section": "3. Data Analytics",
    "text": "3. Data Analytics\n\n3.1 Histogram of dataset\n\n\nShow\noptions(scipen = 999)\n\np1 <- gghistostats(\n  data = HDBDATA, x = \"rmlease\",\n  type = \"bayes\",\n  test.value = 100,\n  xlab = \"Resale Property remaining lease\"\n  )\n\np2 <- gghistostats(\n  data = HDBDATA, x = \"month\",\n  type = \"bayes\",\n  test.value = 100,\n  xlab = \"Month of Purchase\"\n  )\n\np3 <- gghistostats(\n  data = HDBDATA, x = \"resale_price\",\n  type = \"bayes\",\n  test.value = 100,\n  xlab = \"Resale Price\"\n  )\n\np4 <- gghistostats(\n  data = HDBDATA, x = \"price_per_sqm\",\n  type = \"bayes\",\n  test.value = 100,\n  xlab = \"Resale Price/sqm\"\n  )\n\np5 <- ggplot(\n  data = HDBDATA, aes(x = town, y=rmlease, colour = flat_type)) + geom_point() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + \n    labs( x = \"Resale by Town\")\n\np6 <- ggplot(\n  data = HDBDATA, aes(x = storey_range, fill = flat_type)) + geom_bar() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + \n    labs( x = \"Resale by Storey\")\n\n(p3 + p4) / (p1 + p2)\n\n\n\n\n\nShow\np5\n\n\n\n\n\nShow\np6\n\n\n\n\n\nFrom the following histograms, we have the following findings:\n\nWhen we compare the Resale Price vs Resale Price/sqm, we notice that the Resale Price is flatter and more uneven as compared to the Resale Price/sqm, especially for the lower priced. The Resale Price/Sqm is more evenly distributed, even though it is right skewed. Thus, for further analysis, the Resale price/sqm data is preferred.\nThe resale by remaining lease histogram is double-peaked. The largest number of resale have 94 years left in the lease. This is almost immediately after the HDB MOP of 5 years for a 99year lease. This group should be the newest HDB flats. The next “peak” is at 60 years. When compared to the resale by town, we can see that the these 90+yo flats mostly come from the newer towns like Sengkang and Punggol. Those with lesser remaining leases come from the more mature estates.\nWe noted a trend that the older flats (with lesser remaining lease) tend to be smaller room type.\nThe resale by storey is in line with the trend that Singapore do not have many flats above 21 storey.\n\n\n\n3.2 Comparing prices by flat type\n\n\nShow\nggbetweenstats(\n  data = HDBDATA,\n  x = flat_type, \n  y = price_per_sqm,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\nUsing a violin plot, we compare the $/sqm by flat type. Thus, it can be see that the prices is driven by demand that the median price for a 3-room flat can be higher than a 5-room flat.\nThus, the prices of the flat may have a higher correlation to location (accessibility), demand for flats, affordability. 5-room flats which cost higher due to the area range may have a lower demand.\nIt can be noted that the Singapore housing rates are rather stable with all 3 flat types have very close median of only $100-$200 difference.\n\n\n3.3 Resale Price by region\nWe can see that for the North, North-East and West, the histogram is rather uniformed. However, for East and Central, the prices are binomial.\n\n\nShow\nHDBDATA %>%\n  \ngrouped_gghistostats(\n  x                 = resale_price,\n  test.value        = 50,\n  type              = \"nonparametric\",\n  grouping.var      = region,\n  normal.curve      = TRUE,\n  normal.curve.args = list(color = \"red\", size = 1),\n  ggtheme           = ggthemes::theme_tufte(),\n  ## modify the defaults from `{ggstatsplot}` for each plot\n  plotgrid.args     = list(nrow = 2),\n  annotation.args   = list(title = \"Resale price by region\")\n)\n\n\n\n\n\n\n\n3.4 Comparing prices per floor area\nWe can see that there is an extremely high correlation between resale price and floor area.\n\n\nShow\nggscatterstats(\n  data = HDBDATA,\n  x = resale_price,\n  y = floor_area_sqm,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n3.5 Comparing prices per floor area\n\n\nShow\nscdata <- highlight_key(HDBDATA) \n  \nsc1 <- ggplot(data = scdata, aes(x = town, y = resale_price, colour = region)) + geom_point() + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + scale_y_continuous(breaks = c(200000,500000,1000000,150000)) \n\nsc2 <- ggplot(data = scdata, aes(x = town, y = price_per_sqm, colour = region)) + geom_point() + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1), legend.position='none') + \n    scale_y_continuous(breaks = c(3000,6000,9000,12000,15000)) +\n    labs(title = \"Price vs Price per sqm\")\n\nsubplot(ggplotly(sc1), ggplotly(sc2))\n\n\n\n\n\n\nWhen compared, we can see that the distribution of price vs price/sqm is very different. Even though there is a huge jump in price (e.g Queenstown) where there appears to be an “exception”, the price/sqm does not show that jump. Thus, using price/sqm is a better comparision.\nHowever, we do notice that when we look at the highest priced property in Clementi, we noticed that it is actually not the highest priced/sqm. This goes to show that even though area is a huge factor, there maybe other reasons which will still slightly affect the price of a property.\n\n\n3.6 Comparing prices per location\n\n\nShow\nHDBDATA %>%\n  mutate(class = fct_reorder(town, price_per_sqm, .fun=\"mean\")) %>%\n  ggplot(aes(y =reorder(town, price_per_sqm),\n           x = price_per_sqm, fill = region)) + \n  geom_boxplot() + stat_summary(fun.y=mean, geom = \"point\", colour=\"yellow\") +\n  labs(x = \"Price per sqm\", y = \"Town\", title = \"Price per sqm by town\")\n\n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\nThe data generated is not surprising with Central region dominating the price. However, we can tell that Clementi is also a popular area despite being in the West. It is also interesting to note that for old estates like Bishan and Ang Mo Kio, the prices are of the extreme ends with many 1 off exceptions. This was also mentioned in the news for Bishan being sold at a million dollars1.\n\n\n3.7 Comparing prices per location\n\n\nShow\nHDBDATA %>% \n  group_by(region) %>%\n  mutate(class = fct_reorder(region, price_per_sqm, .fun=\"mean\")) %>%\n  ggplot(mapping = aes(y = flat_type, x = price_per_sqm)) +\n  # Make grouped boxplot\n  geom_boxplot(aes(fill = as.factor(region))) +\n  theme(legend.position = \"top\") +\n  # Adjust lables and add title\n  labs(title = \"HDB resale prices in 2022 by region\", y=\"Flat Type\", x = \"Price per sqm\", fill = \"flat_type\")\n\n\n\n\n\nUsing this boxplot, we can tell that there is a huge price gap by location with Central far off from the rest of the regions for only 5 room and 4 room flats. For the rest of the regions, the rankings are rather similar with North-East being the next most expensive and the West being the cheapest.\nFor 3 room flats, there is not much price discrepancies.\n\n\n3.6 Price by Storey\n\n\nShow\nfloorheatmap <-\n  HDBDATA %>%\n  group_by(town, storey_range) %>%\n  summarise(median_price = median(price_per_sqm))\n\n\n`summarise()` has grouped output by 'town'. You can override using the\n`.groups` argument.\n\n\nShow\nheatmap <- ggplot(data = floorheatmap, \n                  mapping = aes(x = town, y = storey_range, fill = median_price)) +\n            geom_tile() +\n  labs(title = \"Heatmap of HDB breakdown by area and storey\", x = \"Town\", y = \"Storey\") +\n  scale_fill_gradient(name = \"Median Resale Price/sqm\",\n                      low = \"peachpuff\",\n                      high = \"deeppink4\")+\ntheme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\nheatmap\n\n\n\n\n\nWith this heatmap, we can confirm that the higher the storey leve, the higher the price. Jurong West and Geylang are the only exceptions where there is property which are cheaper for a lower level. These could be exceptions where other factors such as number of years on remaining lease comes into play. Referencing to the graph in 3.1, the property in Geylang and Jurong have varied aged property.\n\n\n3.6 Property Price over time in 2022\n\n\nShow\na <-\nggplot(HDBDATA, aes(x = rmlease, y = resale_price, \n                      size = floor_area_sqm, \n                      colour = region)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_size(range = c(2, 12)) +\n  labs(title = '2022: {as.integer(frame_time)} Month', \n       x = 'Remaining Lease', \n       y = 'Resale Price') +\n  transition_time(month) +       #<<\n  ease_aes('linear')            #<<\n\na\n\n\n\n\n\nFrom this animated graph over the cross of 12 months, we can tell that there is no hugh fluctuations in property prices by the price for each region is relatively stable with the exception of Central whose prices should be driven other factors.\nLegend:\nSize of dot: Size of Property\nColour: by Region (Consistent with graphs above)"
  }
]