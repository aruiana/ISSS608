[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Submission Links",
    "section": "",
    "text": "Tableau Profile: Ariana Tan\nGithub: Aruiana"
  },
  {
    "objectID": "Hands-on_EX01/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_EX01/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-Class_Ex03/In_Class03.html",
    "href": "In-Class_Ex03/In_Class03.html",
    "title": "InClass Ex 3",
    "section": "",
    "text": "Getting Started\nInstall and launch R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse and ggiraph packages are installed in the computer.\n\npacman::p_load(ggiraph, tidyverse)\n\nImporting the data\n\n\n\nPlotting a simple bar chart\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-Class_Ex04/In_Class04.html",
    "href": "In-Class_Ex04/In_Class04.html",
    "title": "In-Class Ex 4",
    "section": "",
    "text": "pacman::p_load(plotly, DT, patchwork, ggstatsplot, tidyverse)\n\n\nexam_data <- read_csv((\"data/Exam_data.csv\"))\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE) #<<\n\n\n\n\n\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p) #<<\n\n\n\n\n\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER,\n  y = MATHS,\n  type = \"p\",\n  messages = FALSE\n)\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  )\n\n\n\n\n\npacman::p_load(readxl, easystats)\n\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_c <- check_collinearity(model)\n\ncheck_c\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Guarantee_Period  1.04   [1.01, 1.17]         1.02      0.97     [0.86, 0.99]\n        Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n         Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\nHigh Correlation\n\n   Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n     KM 1.46 [1.37, 1.57]         1.21      0.68     [0.64, 0.73]\n Weight 1.41 [1.32, 1.51]         1.19      0.71     [0.66, 0.76]\n\n\n\nplot(check_c)\n\n\n\n\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)\n\n\n\n\n\ncheck_model(model1)\n\n\n\n\n\nmy_sum <- exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")"
  },
  {
    "objectID": "In-Class_Ex05/In_Class05.html",
    "href": "In-Class_Ex05/In_Class05.html",
    "title": "In-Class Ex 5a",
    "section": "",
    "text": "pacman::p_load(seriation, dendextend, heatmaply, corrplot, tidyverse, ggstatsplot)\n\n\nwine <- read_csv((\"data/wine_quality.csv\"))\n\n\npairs(wine[,1:11])\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p < 0.05\"\n)\n\n\n\n\n\nwine.cor <- cor(wine[, 1:11])\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\nwh <- read_csv(\"data/WHData-2018.csv\")\nrow.names(wh) <- wh$Country\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)\n\n\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])"
  },
  {
    "objectID": "In-Class_Ex05/In_Class05b.html",
    "href": "In-Class_Ex05/In_Class05b.html",
    "title": "In-Class Ex 5a",
    "section": "",
    "text": "pacman::p_load(ggtern, plotly, tidyverse, heatmaply)\n\n\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\nheatmaply(agpop_mutated)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608",
    "section": "",
    "text": "Welcome to my homepage. Let’s aim for A++"
  },
  {
    "objectID": "SuicideSquad/ProposalPage.html",
    "href": "SuicideSquad/ProposalPage.html",
    "title": "Project Proposal",
    "section": "",
    "text": "Exploring the relationship of suicide with potential drivers to reduce suicide rates\n\n\nSuicide is recognised as a public health priority by the World Health Organisation1, as over 700,000 people die annually due to suicide . It is a problem that is not unique to high-income countries (where there is a well-established link with mental disorders) but also affects low- and middle-income countries (where many suicides happen impulsively in moments of crisis with a breakdown in the ability to deal with life stresses). Suicide mortality rate is one of the indicators of target 3.4 of the Sustainable Development Goals: by 2030, which is to reduce by one third premature mortality from noncommunicable diseases.\n\n\n\nOur World in Data 20152 collates global suicide-related data from various sources to contribute to an informed, open debate about ways to prevent suicides. Analysis of the data through unsupervised machine learning techniques such as clustering and regression will allow for more actionable and meaningful insights to be drawn, which could ultimately contribute to timely, evidence-based suicide prevention programmes.\n\n\n\nThe project aims to deliver an R-Shiny app that provides interactive user interface design to:\n• Analyse global differences and patterns in suicide-related mortality rates across countries, age groups, gender, and time using Time Series Clustering\n• Identify important factors driving suicide-related mortality rates using Panel Data Regression\n\n\n\nThe main data on suicide rate is obtained from Global Burden of Disease Collaborative Network (IHME 20193) as it provides comprehensive suicide statistics based on country, year, gender, and age. However, since the purpose of the project is to uncover patterns, indicators (i.e., social and economic) and risk factors (i.e., homicide, violence and drug abuse) affecting suicide rate, additional dataset from World Health Organization4, World Bank and United Nations will also be used.\n\n\n\n\nConfirm the selection of appropriate indicators and risk factors associated with suicide rate\nData wrangling by cleaning and joining with other dataset by country and year\nPerform Exploratory Data Analysis using appropriate R packages\nAnalyse the data using Time Series Clustering using appropriate R packages\nAnalyse the data using Panel Data Regression using appropriate R packages\nModel validation and selection of Panel Data Regression\nDevelop R-Shiny app to enhance user interaction\n\nThe project milestone and timeline for the project is shown below:"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_01/takehome_Ex_01.html",
    "href": "Takehome_Ex/Takehome_Ex_01/takehome_Ex_01.html",
    "title": "Hands-on Ex 1",
    "section": "",
    "text": "Creating data visualisation beyond default\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo.\nStep\nAction\n\n\n\n\n1\nLoad excel file\nClick to a file > choose excel file > Open.\n\n\n\n2\nBin age group in 10s. Select down arrow > Create Group\n\n\n\n3\nLabel bins and add selection to group\n\n\n\n4\nSeparate the male and female population. Right click “Population” > Create > Calculated Field\n\n\n\n5\nCreate a field “Male”.\nCode: If [Sex] = “Males” THEN [Pop] END\nCount the Males in the Population\n\n\n\n6\nCreate a field “Females”.\nCode: If [Sex] = “Males” THEN [Pop] END\nCount the Females in the Population\n\n\n\n7\nPopulate the Male and Female population in Columns by Age Group.\nTo create a pyramid, right click on Male>Edit Axis\n\n\n\n8\na. Range > Fixed > End 24,000\nTo ensure Male and Female axis is synced.\nb. Scale > Select Reversed\n\n\n\n9\nShow Top 9 Planning area.\nSelect down arrow key > Filter > Top > Top 9 > Pop Sum\n\n\n\n10\nChange colour of Female population.\nUnder SUM(Female) > Colour > Select Colour\n\n\n\n11\nInsert Avg Line per Planning Area\n\n\n\n12\nPublish on Tableau Public.\nSever > Tableau Public > Save to Tableau Public\n\n\n\n\n\n\n\n\n\nThis table allows for the user to easily compare each panel against the total average line (grey line). User can see clearly which areas are above average and below average.\n\n\n\n\n\nIt can be observed that even though the population chosen are the biggest 9 areas, the 9 areas are split into 4 above average, 2 on the line and 3 below average. There is a hug difference between the top and bottom of more than 5,000.\n\n\n\nWe observed that for the overall average, there are more females than males. This is also persistent in most planning areas with the exception of Jurong West and Woodlands. This can also be observed where in Sengkang and Jurong West, the female average is almost identical, JW had a larger male average, with a higher population for males aged 20-29.\nThis maybe because of the labour intensive job opportunities in that area which causes an increased demand for young males to move to that area.\n\n\n\nWe observed that in the following planning areas, there is a sharp dip in the population aged 40 - 49. The population for 50 then increases before it dips down again at 60.\n\nBukit Batok\nChua Chu Kang\nHougang\nTampines\nYishun\nWoodlands (Males only)\n\n\n\n\nFor all top 9 planning areas, there are more females than males aged 89 and above. This is inline with research (https://www.prb.org/resources/around-the-globe-women-outlive-men/) that women have a longer life expectancy than men.\n\n\n\nThe planning areas Hougang and Yishun has the average population closest to the average line and thus would be an optimal area to do a population survey using these areas as statistical representation.\n\n\n\nInterestingly, even though Punggol has the 2nd population, there is a large population of females 30 - 39 in that area. This is also interesting to note that for this particular area, the shape of the pyramid is asymmetrical. More research needs to be done to understand the reason.\n\n\n\nWith the exception of SengKang and Punggol, all other areas have a smaller base, indicating an aging population. This is consistent with Singapore projection. As SengKang and Punggol is a relatively new area, for BTOs of new couples, there are more babies born there."
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html",
    "href": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html",
    "title": "Take Home Ex 2",
    "section": "",
    "text": "SINGAPORE POPULATION DISTRIBUTION BY AGE by THOMAS HOANG"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#critic",
    "href": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#critic",
    "title": "Take Home Ex 2",
    "section": "Critic",
    "text": "Critic\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nCritic\nDescription\n\n\n\n\nClarity\ny-axis is by ascending order\nIn a standard pyramid, the y-axis should be by descending order, with 90&above at the top.\n\n\n\nx-axis is inconsistent:\n- between male & female in 1 planning area\n-across all planning areas\n\nx-axis should be consistent between male and female to show a comparative/symmetrical view of the pyramid (not be misleading)\nx-axis should be consistent across all planning areas for ease of comparision\n\n\n\n\ninsufficient spacing for x-axis labels\nUser should be able to see the x-axis label clearly\n\n\n\nno callouts or lead-in to provide context\nNo additional information is given to provide context\n\n\nAesthetics\nOutline is distracting\nThe outline for each bar is distracting as there are many bars and the outline does not give any clarity\n\n\n\nNo gridelines\nMissing grid lines for the x axis for ease of comparison\n\n\n\nDistracting/ unclear colours\nThe yellow and purple colours are glaring for the eyes and is not normally associated with Male/Female (blue/pink)"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#sketch",
    "href": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#sketch",
    "title": "Take Home Ex 2",
    "section": "Sketch",
    "text": "Sketch"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#remake",
    "href": "Takehome_Ex/Takehome_Ex_02/takehome_Ex_02.html#remake",
    "title": "Take Home Ex 2",
    "section": "Remake",
    "text": "Remake\n\npacman::p_load(tidyverse, patchwork, ggthemes, reshape2, dplyr) \n\n#| echo: false\n  Popdata <- read_csv(\"data/respopagesextod2022.csv\", col_names = TRUE, show_col_types = FALSE)\nPopdata\n\n# A tibble: 100,928 × 7\n   PA         SZ                     AG     Sex     TOD                Pop  Time\n   <chr>      <chr>                  <chr>  <chr>   <chr>            <dbl> <dbl>\n 1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 1- and 2-Ro…     0  2022\n 2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 3-Room Flats    10  2022\n 3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 4-Room Flats    10  2022\n 4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 5-Room and …    30  2022\n 5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HUDC Flats (exc…     0  2022\n 6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Condominiums an…    50  2022\n 7 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Landed Properti…     0  2022\n 8 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Others               0  2022\n 9 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 1- and 2-Ro…     0  2022\n10 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 3-Room Flats     0  2022\n# … with 100,918 more rows\n\n\n\nPA_pop_tab <- Popdata %>%\n  group_by(PA) %>%\n  summarise(PA_pop = sum(Pop)) %>%\n  top_n(n=9, wt=PA_pop) %>%\n  arrange(desc(PA_pop))\n\nPopdataT9 <- Popdata %>%\n filter(PA %in% PA_pop_tab$PA)\n\n\n Popdata_males <- Popdata %>%\n  filter(`Sex` ==  \"Males\") %>%\n  mutate (Pop = -Pop)\n \n Popdata_females <-Popdata %>%\n  filter(`Sex` ==  \"Females\") \nPopdata_T <- rbind(Popdata_males,Popdata_females)\n\nPopdata_T\n\n# A tibble: 100,928 × 7\n   PA         SZ                     AG     Sex   TOD                  Pop  Time\n   <chr>      <chr>                  <chr>  <chr> <chr>              <dbl> <dbl>\n 1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room…     0  2022\n 2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats     -10  2022\n 3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats     -10  2022\n 4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Ex…   -30  2022\n 5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclu…     0  2022\n 6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and …   -50  2022\n 7 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Landed Properties      0  2022\n 8 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Others                 0  2022\n 9 Ang Mo Kio Ang Mo Kio Town Centre 5_to_9 Males HDB 1- and 2-Room…     0  2022\n10 Ang Mo Kio Ang Mo Kio Town Centre 5_to_9 Males HDB 3-Room Flats     -10  2022\n# … with 100,918 more rows\n\n\n\noptions(scipen = 999)\np1 <- ggplot(data = PopdataT9 , aes (y = PA, x = Pop, fill = Sex)) +\n      geom_bar(stat = \"identity\") + scale_fill_manual(\"legend\", values = c(\"Females\" = \"indianred1\", \"Males\" = \"royalblue3\")) + scale_x_continuous(labels = scales::comma, limits = c(0,250000) ) + ggtitle(\"Total Population Size of Top 9 Planning Areas\")\n\np1\n\nWarning: Removed 893 rows containing missing values (`geom_bar()`).\n\n\n\n\n\n\nPopdata_T9 <- Popdata_T %>%\n filter(PA %in% PA_pop_tab$PA)\n\n\nxbrks <- seq(-15000,15000,5000)\nxlabls <- paste0(as.character(c(seq(15, 0, -5),seq(5,15,5))),\"k\")\nPopdata_T$AG <- factor (Popdata_T$AG, levels = unique(Popdata_T$AG))\n\np2 <- ggplot(Popdata_T9, aes (x = AG, y = Pop, fill = Sex)) +\n      geom_bar(stat = \"identity\") + \n      scale_y_continuous(limits = c(-15000,15000), breaks = xbrks, \n                         labels = xlabls, name = \"Population Size\")+  \n  xlab(\"Age Groups\") + coord_flip() + theme_bw() + facet_wrap(vars(PA)) +\n  scale_fill_manual(\"legend\", values = c(\"Females\" = \"indianred1\", \"Males\" = \"royalblue3\")) + ggtitle(\"Population Pyramid of Top 9 Planning Areas\")\n\np2\n\n\n\n\n\np3 <- p1 + p2 + plot_layout(heights = c(1, 2))\n\np3\n\nWarning: Removed 893 rows containing missing values (`geom_bar()`)."
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html",
    "title": "Take Home Ex 3",
    "section": "",
    "text": "To uncover the salient patterns of the resale prices of public housing property by residential towns and estates in Singapore by using appropriate analytical visualisation techniques l\nFor the purpose of this study, the focus in on 3-ROOM, 4-ROOM and 5-ROOM types in 2022."
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-1-load-packages",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-1-load-packages",
    "title": "Take Home Ex 3",
    "section": "Step 1: Load Packages",
    "text": "Step 1: Load Packages\n\n\nShow\npacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate, ggstatsplot, heatmaply)"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-2-import-data",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-2-import-data",
    "title": "Take Home Ex 3",
    "section": "Step 2: Import Data",
    "text": "Step 2: Import Data\n\n\nShow\n#import data\nHDB <- read_csv((\"data/HDB.csv\"))\n\n\nRows: 146338 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): month, town, flat_type, block, street_name, storey_range, flat_mode...\ndbl (3): floor_area_sqm, lease_commence_date, resale_price\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step3-filter-data-for-the-study",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step3-filter-data-for-the-study",
    "title": "Take Home Ex 3",
    "section": "Step3: Filter Data for the study",
    "text": "Step3: Filter Data for the study\nFilter out the data required:\n1. Room Type\n2. Year 2022\n\n\nShow\n#Filter 3Room, 4Room, 5Room, Filter 2022, Convert remaining lease into years\nHDBRoom <- HDB %>% filter(flat_type==\"3 ROOM\" | flat_type==\"4 ROOM\" | flat_type==\"5 ROOM\") %>%\n  separate(month, into = c(\"year\", \"month\")) %>% \n  filter(year == \"2022\") %>%\n  separate(remaining_lease, into = c(\"rmlease_years\", \"rmlease_month\"), sep = \"years\")"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-4-amend-data-set",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-4-amend-data-set",
    "title": "Take Home Ex 3",
    "section": "Step 4: Amend Data Set",
    "text": "Step 4: Amend Data Set\n1. Convert the Month from Character to Number\n2. Convert Remaining lease from Character to Number\n3. Re-categorise towns into regions\n4. Sort Storey Range by smallest to largest\n5. Create new dataset for price/sqm\n\n\nShow\n#Convert Month from Chr to number\nHDBRoom$month <- as.numeric(HDBRoom$month)\n\n#Convert Remaining lease into numeric years in decimal\nHDBRoom$rmlease_years <- as.numeric(HDBRoom$rmlease_years)\n\nHDBRoom$rmlease_month <- gsub(\"[monthsmonth]\", \" \", HDBRoom$rmlease_month) %>%\n  as.numeric(HDBRoom$rmlease_month) / 12 \n\nHDBRoom$rmlease_month[is.na(HDBRoom$rmlease_month)] = 0\n\nHDBRoom$rmlease <- as.numeric(HDBRoom$rmlease_years + HDBRoom$rmlease_month)\n\n#Group Towns into Regions\nHDBRoom$region <- case_when(\n  HDBRoom$town %in% c(\"ANG MO KIO\", \"HOUGANG\", \"PUNGGOL\", \"SERANGOON\", \"SENGKANG\") ~ \"North-East\",\n    HDBRoom$town %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"GEYLANG\", \"KALLANG/WHAMPOA\", \"MARINE PARADE\", \"QUEENSTOWN\", \"TOA PAYOH\") ~ \"Central\",\n    HDBRoom$town %in% c(\"BEDOK\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n    HDBRoom$town %in% c(\"SEMBAWANG\", \"WOODLANDS\", \"YISHUN\") ~ \"North\",\n    HDBRoom$town %in% c(\"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\", \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\") ~ \"West\")\n\n#Edit storey range and sort by smallest\nHDBRoom$storey_range <- str_replace(HDBRoom$storey_range, \"TO\", \"-\")\n\nsr_sort = c(\"01 - 03\", \"04 - 06\", \"07 - 09\", \"10 - 12\", \"13 - 15\", \"16 - 18\", \"19 - 21\", \"22 - 24\",\"25 - 27\",\"28 - 30\", \"31 - 33\", \"34 - 36\", \"37 - 39\", \"40 - 42\", \"43 - 45\", \"46 - 48\", \"49 - 51\")\n\nHDBRoom$storey_range <- factor (HDBRoom$storey_range, levels = sr_sort)\n\n#Create additional data on price per sqm\nHDBRoom$price_per_sqm <- (HDBRoom$resale_price / HDBRoom$floor_area_sqm)"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-5-select-the-relevant-columns-for-analysis",
    "href": "Takehome_Ex/Takehome_Ex_03/takehome_Ex_03.html#step-5-select-the-relevant-columns-for-analysis",
    "title": "Take Home Ex 3",
    "section": "Step 5: Select the relevant columns for analysis",
    "text": "Step 5: Select the relevant columns for analysis\n\n\nShow\nHDBDATA <- HDBRoom [,!names(HDBRoom) %in% c(\"year\", \"block\", \"street_name\", \"rmlease_years\", \"rmlease_month\", \"flat_model\")]"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html",
    "href": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html",
    "title": "Take Home Ex 4",
    "section": "",
    "text": "To uncover the impact of COVID-1 and global economic and political dynamics happening in 2022 on Singapore bi-lateral trade.\nFor the purpose of this study, the focus in on January 2020 to Dec 2022."
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step-1-load-packages",
    "href": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step-1-load-packages",
    "title": "Take Home Ex 4",
    "section": "Step 1: Load Packages",
    "text": "Step 1: Load Packages\n\n\nShow\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse, datawizard)"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step-2-import-data",
    "href": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step-2-import-data",
    "title": "Take Home Ex 4",
    "section": "Step 2: Import Data",
    "text": "Step 2: Import Data\n\n\nShow\n#import data\ni <- data_transpose(read_xlsx(\"data/outputFile.xlsx\", sheet = \"T1\", range = \"A10:AK129\" ), rownames = \"imtime\", colnames = TRUE)\n\ne <- data_transpose(read_xlsx(\"data/outputFile.xlsx\", sheet = \"T2\", range = \"A10:AK101\" ), rownames = \"extime\", colnames = TRUE)"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step3-clean-data-import",
    "href": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step3-clean-data-import",
    "title": "Take Home Ex 4",
    "section": "Step3: Clean Data (Import)",
    "text": "Step3: Clean Data (Import)\n\n\nShow\n#convert data to raw figures\nimportdata <- i %>%\n  mutate_at(vars(contains('Thousand Dollars')), ~ (. *1000)) %>%      \n  mutate_at(vars(contains('Million Dollars')), ~ (. *1000000)) %>%\n  separate(imtime, into = c(\"year\", \"month\"))\n\n\n#remove legend\ncolnames(importdata) <- gsub(\" (Thousand Dollars)\", \"\", colnames(importdata), fixed = TRUE)\ncolnames(importdata) <- gsub(\" (Million Dollars)\", \"\", colnames(importdata), fixed = TRUE)\ncolnames(importdata) <-gsub('Vietnam, Socialist Republic Of', 'Vietnam',gsub('Germany, Federal Republic Of', 'Germany', gsub('Republic of Korea', 'Korea', colnames(importdata))))\n\n#convert date to numbers\nimportdata$month <- gsub('Dec', '12', gsub('Nov','11', gsub('Oct','10',gsub('Sep','09',gsub('Aug','08', gsub('Jul','07', gsub('Jun', '06', gsub('May', '05',gsub('Apr','04', gsub('Mar','03', gsub('Feb','02', gsub('Jan','01',importdata$month)))))))))))) %>% as.numeric(importdata$month)\n\nimportdata$year <- as.numeric(importdata$year)\n\n\n#extract only country data and non-zero data\nimd <- importdata [,!names(importdata) %in% c(\"Total Merchandise Imports\", \"Europe\", \"America\", \"Asia\", \"Europe\", \"Oceania\", \"Africa\", \"European Union\",\"Commonwealth Of Independent States\")]\nimport_use <- imd[, colSums(imd) != 0]\n\n\nimport_use$time = as.Date(paste(import_use$year,\"-\",import_use$month,\"-01\",sep = \"\"))\n\nimd2 <- import_use [,!names(import_use) %in% c(\"year\", \"month\")]\n\nimpexp <- imd2 %>% pivot_longer(!time, names_to = \"Country\", values_to = \"Import\")"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step4-clean-data-export",
    "href": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step4-clean-data-export",
    "title": "Take Home Ex 4",
    "section": "Step4: Clean Data (Export)",
    "text": "Step4: Clean Data (Export)\n\n\nShow\n#repeat data cleaning for export\n\n#convert data to raw figures\nexportdata <- e %>%\n  mutate_at(vars(contains('Thousand Dollars')), ~ (. *1000)) %>%      \n  mutate_at(vars(contains('Million Dollars')), ~ (. *1000000)) %>%\n  separate(extime, into = c(\"year\", \"month\"))\n\n\n#remove legend\ncolnames(exportdata) <- gsub(\" (Thousand Dollars)\", \"\", colnames(exportdata), fixed = TRUE)\ncolnames(exportdata) <- gsub(\" (Million Dollars)\", \"\", colnames(exportdata), fixed = TRUE)\ncolnames(exportdata) <-gsub('Vietnam, Socialist Republic Of', 'Vietnam',gsub('Germany, Federal Republic Of', 'Germany',gsub('Republic of Korea', 'Korea', colnames(exportdata))))\n\n#convert date to numbers\nexportdata$month <- gsub('Dec', '12', gsub('Nov','11', gsub('Oct','10',gsub('Sep','09',gsub('Aug','08', gsub('Jul','07', gsub('Jun', '06', gsub('May', '05',gsub('Apr','04', gsub('Mar','03', gsub('Feb','02', gsub('Jan','01',exportdata$month)))))))))))) %>% as.numeric(exportdata$month)\n\nexportdata$year <- as.numeric(exportdata$year)\n\n\n#extract only country data and non-zero data\nexd <- exportdata [,!names(exportdata) %in% c(\"Total Merchandise Exports\", \"Europe\", \"America\", \"Asia\", \"Europe\", \"Oceania\", \"Africa\", \"European Union\", \"Commonwealth Of Independent States\")]\nexport_use <- exd[, colSums(exd) != 0]\n\n\nexport_use$time = as.Date(paste(export_use$year,\"-\",export_use$month,\"-01\",sep = \"\"))\n\nexd2 <- export_use [,!names(export_use) %in% c(\"year\", \"month\")]\n\nimpexp2 <- exd2 %>% pivot_longer(!time, names_to = \"Country\", values_to = \"Export\")"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step-5-combine-data",
    "href": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step-5-combine-data",
    "title": "Take Home Ex 4",
    "section": "Step 5: Combine Data",
    "text": "Step 5: Combine Data\n\n\nShow\nimpexp_use <- merge(x=impexp,y=impexp2,by.x=c(\"time\",\"Country\"),by.y=c(\"time\",\"Country\"),all.x = TRUE,all.y = TRUE)\n  \nimpexp_use[is.na(impexp_use)] = 0\n\nimpexp_use$nett <- impexp_use$Export - impexp_use$Import\nimpexp_use$year <- year(impexp_use$time)\nimpexp_use$month <- month(impexp_use$time)"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step-6-find-out-top-importexport-countries",
    "href": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#step-6-find-out-top-importexport-countries",
    "title": "Take Home Ex 4",
    "section": "Step 6: Find out top import/export countries",
    "text": "Step 6: Find out top import/export countries\n\n\nShow\nImTop_2020 <- impexp_use %>%\n  filter(time < '2021-01-01') %>%\n  group_by(Country) %>%\n  summarise(Imp2010 = sum(Import)) %>%\n  top_n(n=10, wt=Imp2010) %>%\n  arrange(desc(Imp2010))\n\nImTop_2021 <- impexp_use %>%\n  filter(time >='2021-01-01' & time <='2021-12-31')  %>%\n  group_by(Country) %>%\n  summarise(Imp2110 = sum(Import)) %>%\n  top_n(n=10, wt=Imp2110) %>%\n  arrange(desc(Imp2110))\n\nImTop_2022 <- impexp_use %>%\n  filter(time > '2022-01-01') %>%\n  group_by(Country) %>%\n  summarise(Imp2210 = sum(Import)) %>%\n  top_n(n=10, wt=Imp2210) %>%\n  arrange(desc(Imp2210))\n\nAllImtop10 <- c(ImTop_2020$Country, ImTop_2021$Country, ImTop_2022$Country)\nTop10Import <- unique(AllImtop10)\n\n\nImTop10 <- impexp_use %>%\n filter(Country %in% Top10Import)\n\nExTop_2020 <- impexp_use %>%\n  filter(time < '2021-01-01') %>%\n  group_by(Country) %>%\n  summarise(Exp2010 = sum(Export)) %>%\n  top_n(n=10, wt=Exp2010) %>%\n  arrange(desc(Exp2010))\n\nExTop_2021 <- impexp_use %>%\n  filter(time >='2021-01-01' & time <='2021-12-31')  %>%\n  group_by(Country) %>%\n  summarise(Exp2110 = sum(Export)) %>%\n  top_n(n=10, wt=Exp2110) %>%\n  arrange(desc(Exp2110))\n\nExTop_2022 <- impexp_use %>%\n  filter(time > '2022-01-01') %>%\n  group_by(Country) %>%\n  summarise(Exp2210 = sum(Export)) %>%\n  top_n(n=10, wt=Exp2210) %>%\n  arrange(desc(Exp2210))\n\nAllExtop10 <- c(ExTop_2020$Country, ExTop_2021$Country, ExTop_2022$Country)\nTop10Export <- unique(AllExtop10)\n\nExTop10 <- impexp_use %>%\n filter(Country %in% Top10Export)\n\nAlltop10 <- c(ExTop_2020$Country, ExTop_2021$Country, ExTop_2022$Country, ImTop_2020$Country, ImTop_2021$Country, ImTop_2022$Country)\nTop10 <- unique(Alltop10)\n\nIETop10 <- impexp_use %>%\n filter(Country %in% Top10)"
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#slopegraph",
    "href": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#slopegraph",
    "title": "Take Home Ex 4",
    "section": "1. Slopegraph",
    "text": "1. Slopegraph\n\nImport trend\n\n\nShow\nIETop10 %>% \n  mutate(Year = factor(time)) %>%\n  filter(Year %in% c(\"2020-01-01\",\"2021-01-01\",\"2022-01-01\",\"2022-12-01\")) %>%\n  newggslopegraph(Year, Import, Country,\n                Title = \"Import by Singapore to Top countries\",\n                SubTitle = \"2020 to 2022\", Caption = \"Singapore Imports as at date\")\n\n\n\nConverting 'Year' to an ordered factor\n\n\n\n\n\nBased on the graph, we can see that in 2021 - 2022, there is a switch in positions of the top few countries that Singapore imports from.\n\nUS dipped in 2021 when covid impacted them the highest.\nTaiwan went from the 4th import country and had a sharp increase of which they were the top country Singapore imported from in Jan 2022 after which they had a sharp drop down to the 3rd position.\n\nIt maybe likely that Singapore imported more from Taiwan during those periods to cover the gaps from the other countries (such as US)\n\nKorea also had a sharp increase in 2022, jumping above Japan.\nUAE is another suprising country of which Singapore imports from. It also jumped up the ranks during covid. As Singapore mainly imports crude oils from UAE, it could also possibly mean that the increase is in preparation of the opening of traveling.\n\n\n\nExport trend\n\n\nShow\nIETop10 %>% \n  mutate(Year = factor(time)) %>%\n  filter(Year %in% c(\"2020-01-01\",\"2021-01-01\",\"2022-01-01\",\"2022-12-01\")) %>%\n  newggslopegraph(Year, Export, Country,\n                Title = \"Export by Singapore to Top countries\",\n                SubTitle = \"2020 to 2022\", Caption = \"Singapore Exports as at date\")\n\n\n\nConverting 'Year' to an ordered factor\n\n\n\n\n\nSimilar to the imports, we see that Covid impacted US borders the most as there is a dip for both import and export. It is only in 2022 when US opened its boarders. This is the same for Indonesia when there is a huge dip in 2021.\nIt is surprising that Hong Kong is now the top country that Singapore exports to. This could be aviation engines as Hong Kong prepares for a revival of their travel industry.\n\n\nNett trend\n\n\nShow\nIETop10 %>% \n  mutate(Year = factor(time)) %>%\n  filter(Year %in% c(\"2020-01-01\",\"2021-01-01\",\"2022-01-01\",\"2022-12-01\")) %>%\n  newggslopegraph(Year, nett, Country,\n                Title = \"Nett Import/Export by Singapore to Top countries\",\n                SubTitle = \"2020 to 2022\", Caption = \"Nett import/export as at date\")\n\n\n\nConverting 'Year' to an ordered factor\n\n\n\n\n\nWith this nett trend, we can tell that we Export the most to Hong Kong while not having any Imports from them. For China, even though they are the second highest country that Singapore exports to, Singapore imports more from them."
  },
  {
    "objectID": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#cycleplot",
    "href": "Takehome_Ex/Takehome_Ex_04/takehome_Ex_04.html#cycleplot",
    "title": "Take Home Ex 4",
    "section": "2. Cycleplot",
    "text": "2. Cycleplot\n\n\nShow\noptions(scipen = 999)\ncycle_plot <- function(country){\n  hline.data <- IETop10 %>% \n    filter(Country == country) %>%\n    group_by(month) %>%\n    summarise(avgvalue = mean(Export))\n  \n  hlineim.data <- IETop10 %>% \n    filter(Country == country) %>%\n    group_by(month) %>%\n    summarise(avgvalue = mean(Import))\n  \n  xbrks <- seq(2020,2022,1)\n  legend <- c(\"Red - Export\", \"Blue - Import\")\n  \n  ggplot() + \n    geom_line(data=IETop10 |> filter(Country == country),\n              aes(x=year, \n                  y=.data$Export, \n                  group=month), \n              colour=\"darkred\") +   \n    geom_hline(aes(yintercept= avgvalue), \n               data=hline.data,\n               linetype=6, \n               colour=\"red\", \n               size=0.5) + \n     geom_line(data=IETop10 |> filter(Country == country),\n              aes(x=year, \n                  y=.data$Import, \n                  group=month), \n              colour=\"darkblue\")  +     \n    geom_hline(aes(yintercept= avgvalue), \n               data=hlineim.data,\n               linetype=6, \n               colour=\"blue\", \n               size=0.5) +\n    facet_grid(~month) + \n    labs(axis.text.x = element_blank(),\n         title = paste0(\"Export to \",country)) +\n    xlab(\"Year\") +\n    ylab(\"$\") + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +\n    scale_x_continuous(breaks=xbrks) \n}\n\ncycle <- map(Top10, cycle_plot)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\nMainland ChinaHong KongUnited StatesMalaysiaIndonesiaTaiwanJapanKoreaThailandVietnamFranceGermanyUAE\n\n\n\n\nShow\ncycle[[1]] \n\n\n\n\n\n\n\n\n\nShow\ncycle[[2]]\n\n\n\n\n\n\n\n\n\nShow\ncycle[[3]]\n\n\n\n\n\n\n\n\n\nShow\ncycle[[4]]\n\n\n\n\n\n\n\n\n\nShow\ncycle[[5]]\n\n\n\n\n\n\n\n\n\nShow\ncycle[[6]]\n\n\n\n\n\n\n\n\n\nShow\ncycle[[7]]\n\n\n\n\n\n\n\n\n\nShow\ncycle[[8]]\n\n\n\n\n\n\n\n\n\nShow\ncycle[[9]]\n\n\n\n\n\n\n\n\n\nShow\ncycle[[10]]\n\n\n\n\n\n\n\n\n\nShow\ncycle[[11]]\n\n\n\n\n\n\n\n\n\nShow\ncycle[[12]]\n\n\n\n\n\n\n\n\n\nShow\ncycle[[13]]\n\n\n\n\n\n\n\n\nUsing the cycle graph, we can tell that most countries have a dip in 2021.\nCountries that highly impacted by seasons:\n\nMainland China\nUnited States\nJapan\nThailand\nUAE\n\nFor Germany, it is interesting to note that there was a rise in imports during covid, especially in May, Sept and Dec 2021. Perhaps these were to make up for gaps in our supply chain during covid."
  },
  {
    "objectID": "In-Class_Ex08/In_Class08.html",
    "href": "In-Class_Ex08/In_Class08.html",
    "title": "In-Class Ex 8",
    "section": "",
    "text": "Loading Packages & Data\n\n\nLoad packages\npacman::p_load(igraph, tidygraph, ggraph, visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\n\n\nLoad data\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\nThe SentDate column is updated from string format to date format.\n\n\nShow code\nGAStech_edges <- GAStech_edges %>%\n  mutate(SentDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 9\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ Weekday     <ord> Monday, Monday, Monday, Monday, Monday, Monday, Monday, Mo…\n\n\nIndividuals are aggregated by date, senders, receivers, main subject and day of the week and a new field “weight” is added based on the number of records in each aggregation.\n\n\nShow code\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,456\nColumns: 4\n$ source  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  <dbl> 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7,…\n$ Weekday <ord> Monday, Tuesday, Wednesday, Friday, Monday, Tuesday, Wednesday…\n$ Weight  <int> 4, 3, 5, 8, 4, 3, 5, 8, 4, 3, 5, 8, 4, 3, 5, 8, 4, 3, 5, 8, 4,…\n\n\n\n\nPlot static network graph\nBuild a network graph data frame using tinygraph package.\n\n\nShow code\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\nGAStech_graph\n\n\n# A tbl_graph: 54 nodes and 1456 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# … with 48 more rows\n#\n# Edge Data: 1,456 × 4\n   from    to Weekday   Weight\n  <int> <int> <ord>      <int>\n1     1     2 Monday         4\n2     1     2 Tuesday        3\n3     1     2 Wednesday      5\n# … with 1,453 more rows\n\n\nRearrange the rows in the edges tibble to list those with the highest “weight” first.\n\n\nShow code\nGAStech_graph %>%\n  activate(edges) %>%\n  arrange(desc(Weight))\n\n\n# A tbl_graph: 54 nodes and 1456 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,456 × 4 (active)\n   from    to Weekday Weight\n  <int> <int> <ord>    <int>\n1    40    41 Tuesday     23\n2    40    43 Tuesday     19\n3    41    43 Tuesday     15\n4    41    40 Tuesday     14\n5    42    41 Tuesday     13\n6    42    40 Tuesday     12\n# … with 1,450 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  <dbl> <chr>           <chr>          <chr>           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# … with 51 more rows\n\n\nShow code\nGAStech_graph\n\n\n# A tbl_graph: 54 nodes and 1456 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n     id label               Department     Title                                \n  <dbl> <chr>               <chr>          <chr>                                \n1     1 Mat.Bramar          Administration Assistant to CEO                     \n2     2 Anda.Ribera         Administration Assistant to CFO                     \n3     3 Rachel.Pantanal     Administration Assistant to CIO                     \n4     4 Linda.Lagos         Administration Assistant to COO                     \n5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Manag…\n6     6 Carla.Forluniau     Administration Assistant to IT Group Manager        \n# … with 48 more rows\n#\n# Edge Data: 1,456 × 4\n   from    to Weekday   Weight\n  <int> <int> <ord>      <int>\n1     1     2 Monday         4\n2     1     2 Tuesday        3\n3     1     2 Wednesday      5\n# … with 1,453 more rows\n\n\nPlot a basic network graph based using the above network graph data frame.\n\n\nShow code\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\nWe will improve on the aesthetics of the graph.\n\n\nShow code\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\ng + theme_graph()\n\n\n\n\n\nWe will look at the network graph by days of the week using a panel view. The function facet_edges() is used whereby nodes are always drawn in all panels even if the node data contains an attribute named the same as the one used for the edge facetting.\n\n\nShow code\nset_graph_style() \ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\nWe can also visualise the panel view using the function facet_nodes() whereby edges are only draw in a panel if both terminal nodes are present here.\n\n\nShow code\nset_graph_style()\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\nNext we will compute the centrality indices for the network graph. As ggraph v2.0 tidygraph algorithms allows for centrality measures to be accessed directly in ggraph calls, we do not need to precompute and store derived node and edge centrality measures on the graph in order to use them in a plot.\nThe network graph below uses the Betweenness Centrality. Betweenness centrality quantifies how many times a particular node comes in the shortest chosen path between two other nodes.\n\n\nShow code\ng <- GAStech_graph %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()\n\n\n\n\n\nThe network graph below uses the Edge betweenness Centrality. Edge betweenness centrality is defined as the number of the shortest paths that go through an edge in a graph or network.\n\n\nShow code\ng <- GAStech_graph %>%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %>%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \ng + theme_graph()\n\n\n\n\n\n\n\nPlot interactive network graph\nWe will prepare a data model to plot a basic interactive network graph.\n\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n()) %>%\n  filter(from!=to) %>%\n  filter(weight > 1) %>%\n  ungroup()\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\nWe want to colour the nodes according to the values of the group field. To prepare the data, we will rename Department field to group. visNetwork then shades the nodes by assigning unique colour to each category in the group field.\n\nGAStech_nodes <- GAStech_nodes %>%\n  rename(group = Department)\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)\n\n\n\n\n\nWe will incorporate furhter interactivity features using visOptions(). - The argument highlightNearest highlights nearest when clicking a node. - The argument nodesIdSelection adds an id node selection creating an HTML select element.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 123)"
  }
]